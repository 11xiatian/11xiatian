# Leetcode算法旋转数组

## 题目

给你一个数组，将数组中的元素向右轮转 `k` 个位置，其中 `k` 是非负数。

作者：力扣 (LeetCode)
链接：https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/x2skh7/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



## 题解1：

暴力解法，进行k次循环，每次循环将数组中的元素挨个后移一次

当 k > x 时，将 k = k % len(nums) 使得循环次数减少，但当len(nums)很大时，时间成本还是会很大

这个解法的弊端就在于时间成本大，Leetcode提交会超时

```python
x = len(nums)
        if k > x:
            k = k%x
        for j in range(k):
           temp = nums[x-1]
           for i in range(x-1,0,-1):
              nums[i] = nums[i-1]
           nums[0] = temp
        return nums
```

### 这个题解1过不了Leetcode测试



## 题解2：

python 切片方法解题，就是把数组从某个位置切开，把后面的一段接到前面去，就完成了数组的旋转工作

当 k > len(nums) 时还是要 k = k % len(nums) 不然有些情况测试会不通过

```python
length = len(nums)
        if k > length:
            k = k % length
        nums[:]= nums[length-k:] + nums[:length-k]
        return nums
```

